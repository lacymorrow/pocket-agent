---
description:
globs:
alwaysApply: false
---
# Cursor DOM Selectors for Automation with `cursor_debug.py`

This document outlines key CSS selectors and logic used by the [cli-control-cursor-ide/cursor_debug.py](mdc:cli-control-cursor-ide/cursor_debug.py) script to interact with the Cursor IDE's user interface, particularly for chat automation and text extraction.

The selectors are based on the observed DOM structure, a representative example of which can be found in [cli-control-cursor-ide/example.html](mdc:cli-control-cursor-ide/example.html). Note that the exact class names or structure might change with Cursor updates, so these selectors might need occasional adjustments.

## Target Window Selection

The `get_websocket_uri` function in [cli-control-cursor-ide/cursor_debug.py](mdc:cli-control-cursor-ide/cursor_debug.py) attempts to connect to the correct Cursor editor window by:
1. Fetching all available "page" type targets from `http://localhost:9223/json/list`.
2. Prioritizing pages with "workbench.html" in their URL.
3. If multiple "workbench.html" pages exist, it uses the first one found and issues a warning.
4. If no "workbench.html" pages are found, it filters out common auxiliary windows (e.g., "assistant-ui", "extension-host") and tries to select the most plausible remaining page.

## Key CSS Selectors

### 1. Active Chat Input Field

Used by the `send_message_to_cursor` function (indirectly via JavaScript focus/input simulation) to type new messages.

*   **Selector:** `div.pane-body .composer-bar > div:last-child .aislash-editor-input[contenteditable="true"]`
*   **Description:**
    *   `div.pane-body`: Targets the main content area of a pane.
    *   `.composer-bar`: Narrows down to the chat bar component.
    *   `> div:last-child`: Selects the last direct child `div` of the `composer-bar`, which typically contains the active message input UI.
    *   `.aislash-editor-input[contenteditable="true"]`: Identifies the specific `div` element that acts as the rich text input field.

### 2. Chat Conversation Area

Used by the `read_page_text` function to extract the text content of the chat history.

*   **Selector (used within `Runtime.evaluate`):** `div.pane-body div.conversations`
*   **JavaScript Snippet in `read_page_text`:**
    ```javascript
    (() => {
        const chatContainer = document.querySelector('div.pane-body div.conversations');
        return chatContainer ? chatContainer.innerText : 'Chat conversations container not found';
    })()
    ```
*   **Description:**
    *   `div.pane-body div.conversations`: Targets the container element that holds all the message bubbles in the chat view. The script then extracts its `innerText`.

These selectors are crucial for the automation capabilities provided by the [cli-control-cursor-ide/cursor_debug.py](mdc:cli-control-cursor-ide/cursor_debug.py) script.
