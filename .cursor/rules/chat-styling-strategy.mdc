---
description:
globs:
alwaysApply: false
---
# Chat Styling Strategy for Web View

This rule outlines the approach taken for styling the chat content displayed on the `/view-chat` page served by the Express backend.

## Context
- The VS Code extension ([`src/cursor-plugin.js`](mdc:src/cursor-plugin.js)) extracts the `outerHTML` of the chat container from Cursor.
- Cursor/VS Code use a very large and complex stylesheet (example `style.css` provided by user was over 40,000 lines).

## Strategy
1.  **Server-Side CSS Injection**: Instead of linking to the original large VS Code/Cursor CSS files (which is impractical for a standalone web view due to path issues, performance, and specificity conflicts), a curated set of CSS rules is injected directly into the HTML served by the `/get-chat-html` endpoint in [`src/server/index.js`](mdc:src/server/index.js).
2.  **Targeted Selectors**:
    *   The injected CSS uses selectors based on the actual HTML structure and class names observed in the captured chat HTML (an example of this HTML was provided by the user in a file named `html`).
    *   This includes classes like `.conversations`, `.composer-human-message`, `.anysphere-markdown-container-root`, `.composer-code-block-container`, etc.
3.  **CSS Variables**: The styling leverages common VS Code CSS variables (e.g., `--vscode-editor-background`, `--vscode-editor-foreground`, `--vscode-input-background`) to achieve a look consistent with VS Code themes. Fallback values are provided for these variables.
4.  **Iterative Refinement**: The CSS has been developed iteratively based on visual feedback and inspection of the rendered output, aiming to mimic the original appearance as closely as possible within these constraints.
5.  **No External Stylesheet Dependency for Chat View**: The `/view-chat` page is self-contained in terms of its core chat styling and does not attempt to load the full `style.css` from the editor.

## Rationale
- **Maintainability**: Easier to manage a smaller, targeted set of styles.
- **Performance**: Avoids loading a massive CSS file in the browser for the chat view.
- **Isolation**: Reduces the risk of unintended style conflicts.
