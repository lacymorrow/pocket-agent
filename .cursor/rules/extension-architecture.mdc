---
description:
globs:
alwaysApply: false
---
# Extension Architecture

The Pocket Agent extension follows a modular structure for interacting with both Cursor and a backend server.

## Lifecycle Management

- **Activation**: The [activate](mdc:src/cursor-plugin.js) function sets up the extension, creates an output channel, and establishes connections
- **Deactivation**: The [deactivate](mdc:src/cursor-plugin.js) function cleans up resources when the extension is shut down

## Core Components

1. **CDP Communication**: Uses WebSocket to connect to Cursor's Chrome DevTools Protocol interface
   - [getWebSocketDebuggerUrlJs](mdc:src/cursor-plugin.js) - Finds the appropriate debug target
   - [sendCdpCommandJs](mdc:src/cursor-plugin.js) - Sends commands to the Cursor window
   - [evaluateJavascriptInPageJs](mdc:src/cursor-plugin.js) - Executes JavaScript in the Cursor window

2. **Chat Extraction**:
   - [readChatTextLogicJs](mdc:src/cursor-plugin.js) - Reads chat text from Cursor using CDP
   - [parseChatTextToStructuredData](mdc:src/cursor-plugin.js) - Converts raw chat text to structured message data

3. **Backend Communication**:
   - Uses Socket.IO to maintain a WebSocket connection to the backend server
   - Periodically sends chat updates to the server

4. **Logging**:
   - Dedicated "Pocket Agent" output channel for extension logs
   - Custom logging functions that write to both console and output channel
